@using BlazorApp1.Services;
@inject OrderService orderService;
@inject CustomerService customerService;
@inject NavigationManager navigator;
@inject DeliveryService deliveryService;

<tr>
    <td align="center"><a href="">@deliveryObj.idOrder</a></td>
    <td>@getCustomerName()</td>
    <td>@deliveryObj.zipcode</td>
    <td>@deliveryObj.dateCreated.ToString("MM/dd/yyyy")</td>
    <!--    <td>@(deliveryObj.dateShipped != null ? deliveryObj.dateShipped : "")</td>-->
    <td>@deliveryObj.dateShipped?.ToString("MM/dd/yyyy")</td>
    <td>@deliveryObj.dateDelivered?.ToString("MM/dd/yyyy")</td>
    <td>@deliveryObj.idDriver</td>
    <td align="center">@getDeliveryStatus()</td>
    <td align="center">
        <button type='button' disabled='false' class='btn btn-secondary' @onclick='sendOffersChild'>Send Offers</button>
    </td>
</tr> 

@code
{
    [Parameter]
    public Delivery deliveryObj { get; set; }

    [Parameter]
    public EventCallback<int> paramMethodAndId { get; set; }

    public Order order;
    //public string myMark = "<button type=\"button\" class=\"btn btn-secondary\" @onclick=\"sendOffersChild\">Send Offers</button>";
    public string myMark = "<button type='button' class='btn btn-secondary' onclick ='@@sendOffersChild'>Send Offers</button>";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        order = orderService.GetById(deliveryObj.idOrder);
        //get DeliveryStatus
    }

    public string getCustomerName() {
        Customer yCustomer;
        string strCustomerName = "";

        if (order != null)
        {
            yCustomer = customerService.GetById(order.idCustomer);
            strCustomerName = yCustomer.FirstName;
        }
        return strCustomerName;
    }

    public string getDeliveryStatus()
    {
        string strDescription = "";
        if (deliveryObj.idDeliveryStatus == 1)
            strDescription = "created";
        else if (deliveryObj.idDeliveryStatus == 2)
            strDescription = "shipped";
        else
            strDescription = "delivered";
        return strDescription;
    }

    public void Edit()
    {
        //navigator.NavigateTo($"edit-order/{order.idOrder}");
    }

    public void sendOffersChild()
    {
        navigator.NavigateTo($"offer-list/{deliveryObj.idOrder}");
        //navigator.NavigateTo($"send-text-message/{deliveryObj.idOrder}");
        //paramMethodAndId.InvokeAsync(deliveryObj.idOrder);
    }
}

