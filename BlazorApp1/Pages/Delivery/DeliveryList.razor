@page "/delivery-list"

<PageTitle>DELIVERIES</PageTitle>

@using BlazorApp1.Data
@using BlazorApp1.Services;
@using BlazorApp1.Components;
@using BlazorBootstrap
@inject DeliveryService deliveryService;
@inject OrderService orderService;
@inject NavigationManager navigator;
@inject ModalService ModalService;

<h1>Deliveries</h1>

<table class="table table-hover table-striped table-bordered">
    <thead>
        <tr>
            <th align="center">Order #</th>
            <th>Customer</th>
            <th align="center">Zipcode</th>
            <th align="center">Date Created</th>
            <th align="center">Date Shipped</th>
            <th align="center">Date Delivered</th>
            <th>Driver</th>
            <th align="right">Status</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (deliveryList != null)
        {

            foreach (var item in deliveryList)
            {
                <DeliveryRow deliveryObj="item" paramMethodAndId="offerDelivery"></DeliveryRow>
            }
        }
    </tbody>
</table>


@if (isShowOffer)
{
    <OfferDelivery Obj="obj" OnClose="@onClose"></OfferDelivery>
}

<!--
<Modal @ref="modal" Title="Modal title" UseStaticBackdrop="true">
<BodyTemplate>
Modal body text goes here.
</BodyTemplate>
<FooterTemplate>
<Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Cancel</Button>
<Button Color="ButtonColor.Primary">Send Offers Now</Button>
</FooterTemplate>
</Modal>
-->

@code {
    public List<Delivery> deliveryList;

    private bool isShowOffer = false;
    public Delivery obj;

    private Modal modal = default!;

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }

    public void GetDeliveries()
    {
        deliveryList = deliveryService.GetAll();
        deliveryList = deliveryList.OrderByDescending(Delivery => Delivery.idOrder).ToList();
    }

    protected override void OnInitialized()
    {
        GetDeliveries();
        base.OnInitialized();   
    }

    public void offerDelivery(Delivery objSelected)
    {
        //navigator.NavigateTo($"send-text-message/{objSelected.idOrder}");
        obj = objSelected;
        isShowOffer = true;
        //modal.ShowAsync();
    }

    private void onClose(bool isConfirmed)
    {
        if (isConfirmed)
        {
            //maybe message
        }
        isShowOffer = false;
    }
}
